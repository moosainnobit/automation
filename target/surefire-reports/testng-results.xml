<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="36" passed="32" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-07T11:59:24 IST" name="Surefire suite" finished-at="2022-09-07T12:06:01 IST" duration-ms="397275">
    <groups>
      <group name="Login-Functional">
        <method signature="AppTest.PasswordBackText()[pri:5, instance:com.nglc.application.AppTest@453da22c]" name="PasswordBackText" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.forgotPassword()[pri:12, instance:com.nglc.application.AppTest@453da22c]" name="forgotPassword" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.invalidPassword()[pri:10, instance:com.nglc.application.AppTest@453da22c]" name="invalidPassword" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.login()[pri:1, instance:com.nglc.application.AppTest@453da22c]" name="login" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.loginEmptyEmail()[pri:2, instance:com.nglc.application.AppTest@453da22c]" name="loginEmptyEmail" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.loginUnregisteredEmail()[pri:3, instance:com.nglc.application.AppTest@453da22c]" name="loginUnregisteredEmail" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.validEmailResetPassword()[pri:14, instance:com.nglc.application.AppTest@453da22c]" name="validEmailResetPassword" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.validateEmailAddressInPasswordScreen()[pri:7, instance:com.nglc.application.AppTest@453da22c]" name="validateEmailAddressInPasswordScreen" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.validateErrorCaseSensitivityEmail()[pri:4, instance:com.nglc.application.AppTest@453da22c]" name="validateErrorCaseSensitivityEmail" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.validateErrorCaseSensitivityPwd()[pri:11, instance:com.nglc.application.AppTest@453da22c]" name="validateErrorCaseSensitivityPwd" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.validateErrorMessageBlankPassword()[pri:8, instance:com.nglc.application.AppTest@453da22c]" name="validateErrorMessageBlankPassword" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.verifyEmailAddress()[pri:13, instance:com.nglc.application.AppTest@453da22c]" name="verifyEmailAddress" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.verifyMaskedPassword()[pri:9, instance:com.nglc.application.AppTest@453da22c]" name="verifyMaskedPassword" class="com.nglc.application.AppTest"/>
      </group> <!-- Login-Functional -->
      <group name="Organisation-Functional">
        <method signature="AppTest.BlankDataCreateOrganisation()[pri:116, instance:com.nglc.application.AppTest@453da22c]" name="BlankDataCreateOrganisation" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.CreateOrganisation()[pri:115, instance:com.nglc.application.AppTest@453da22c]" name="CreateOrganisation" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.bibliothecaUserLink()[pri:102, instance:com.nglc.application.AppTest@453da22c]" name="bibliothecaUserLink" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.countryDropdownVisible()[pri:109, instance:com.nglc.application.AppTest@453da22c]" name="countryDropdownVisible" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.logout()[pri:105, instance:com.nglc.application.AppTest@453da22c]" name="logout" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.notification()[pri:103, instance:com.nglc.application.AppTest@453da22c]" name="notification" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.organisationsLink()[pri:101, instance:com.nglc.application.AppTest@453da22c]" name="organisationsLink" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.overviewScreen()[pri:100, instance:com.nglc.application.AppTest@453da22c]" name="overviewScreen" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.profileIcon()[pri:104, instance:com.nglc.application.AppTest@453da22c]" name="profileIcon" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.redirectAddOrganisationScreen()[pri:106, instance:com.nglc.application.AppTest@453da22c]" name="redirectAddOrganisationScreen" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.redirectOrganisationDetailScreen()[pri:107, instance:com.nglc.application.AppTest@453da22c]" name="redirectOrganisationDetailScreen" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.searchExistingOrganisation()[pri:113, instance:com.nglc.application.AppTest@453da22c]" name="searchExistingOrganisation" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.searchIconClickable()[pri:112, instance:com.nglc.application.AppTest@453da22c]" name="searchIconClickable" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.searchNonExistingOrganisation()[pri:114, instance:com.nglc.application.AppTest@453da22c]" name="searchNonExistingOrganisation" class="com.nglc.application.AppTest"/>
      </group> <!-- Organisation-Functional -->
      <group name="User-Functional">
        <method signature="AppTest.AddUserButton()[pri:203, instance:com.nglc.application.AppTest@453da22c]" name="AddUserButton" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.AddingUserwithBlankData()[pri:207, instance:com.nglc.application.AppTest@453da22c]" name="AddingUserwithBlankData" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.AddingValidUser()[pri:206, instance:com.nglc.application.AppTest@453da22c]" name="AddingValidUser" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.EditValidUser()[pri:210, instance:com.nglc.application.AppTest@453da22c]" name="EditValidUser" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.InvalidUserSearch()[pri:202, instance:com.nglc.application.AppTest@453da22c]" name="InvalidUserSearch" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.UserBreadCrumb()[pri:205, instance:com.nglc.application.AppTest@453da22c]" name="UserBreadCrumb" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.UserProfile()[pri:204, instance:com.nglc.application.AppTest@453da22c]" name="UserProfile" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.ValidUserSearch()[pri:201, instance:com.nglc.application.AppTest@453da22c]" name="ValidUserSearch" class="com.nglc.application.AppTest"/>
        <method signature="AppTest.userlist()[pri:200, instance:com.nglc.application.AppTest@453da22c]" name="userlist" class="com.nglc.application.AppTest"/>
      </group> <!-- User-Functional -->
    </groups>
    <test started-at="2022-09-07T11:59:24 IST" name="Surefire test" finished-at="2022-09-07T12:06:01 IST" duration-ms="397275">
      <class name="com.nglc.application.AppTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:24 IST" name="startTest" finished-at="2022-09-07T11:59:24 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:24 IST" name="launchApp" finished-at="2022-09-07T11:59:29 IST" duration-ms="4663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="login()[pri:1, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:29 IST" name="login" finished-at="2022-09-07T11:59:33 IST" duration-ms="4471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:33 IST" name="postCondition" finished-at="2022-09-07T11:59:33 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=AppTest.login()[pri:1, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:33 IST" name="launchApp" finished-at="2022-09-07T11:59:37 IST" duration-ms="3469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginEmptyEmail()[pri:2, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:37 IST" name="loginEmptyEmail" finished-at="2022-09-07T11:59:38 IST" duration-ms="1204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginEmptyEmail -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:38 IST" name="postCondition" finished-at="2022-09-07T11:59:38 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginEmptyEmail status=SUCCESS method=AppTest.loginEmptyEmail()[pri:2, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:38 IST" name="launchApp" finished-at="2022-09-07T11:59:41 IST" duration-ms="3224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginUnregisteredEmail()[pri:3, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:41 IST" name="loginUnregisteredEmail" finished-at="2022-09-07T11:59:43 IST" duration-ms="1478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUnregisteredEmail -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:43 IST" name="postCondition" finished-at="2022-09-07T11:59:43 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginUnregisteredEmail status=SUCCESS method=AppTest.loginUnregisteredEmail()[pri:3, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:43 IST" name="launchApp" finished-at="2022-09-07T11:59:47 IST" duration-ms="3690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="validateErrorCaseSensitivityEmail()[pri:4, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:47 IST" name="validateErrorCaseSensitivityEmail" finished-at="2022-09-07T11:59:49 IST" duration-ms="2211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorCaseSensitivityEmail -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:49 IST" name="postCondition" finished-at="2022-09-07T11:59:49 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateErrorCaseSensitivityEmail status=SUCCESS method=AppTest.validateErrorCaseSensitivityEmail()[pri:4, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:49 IST" name="launchApp" finished-at="2022-09-07T11:59:52 IST" duration-ms="3187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="PasswordBackText()[pri:5, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:52 IST" name="PasswordBackText" finished-at="2022-09-07T11:59:56 IST" duration-ms="4288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PasswordBackText -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:56 IST" name="postCondition" finished-at="2022-09-07T11:59:57 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PasswordBackText status=SUCCESS method=AppTest.PasswordBackText()[pri:5, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T11:59:57 IST" name="launchApp" finished-at="2022-09-07T12:00:00 IST" duration-ms="3700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="validateEmailAddressInPasswordScreen()[pri:7, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:00 IST" name="validateEmailAddressInPasswordScreen" finished-at="2022-09-07T12:00:03 IST" duration-ms="3237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmailAddressInPasswordScreen -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:03 IST" name="postCondition" finished-at="2022-09-07T12:00:04 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEmailAddressInPasswordScreen status=SUCCESS method=AppTest.validateEmailAddressInPasswordScreen()[pri:7, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:04 IST" name="launchApp" finished-at="2022-09-07T12:00:08 IST" duration-ms="4861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="validateErrorMessageBlankPassword()[pri:8, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:08 IST" name="validateErrorMessageBlankPassword" finished-at="2022-09-07T12:00:13 IST" duration-ms="4288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorMessageBlankPassword -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:13 IST" name="postCondition" finished-at="2022-09-07T12:00:13 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateErrorMessageBlankPassword status=SUCCESS method=AppTest.validateErrorMessageBlankPassword()[pri:8, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:13 IST" name="launchApp" finished-at="2022-09-07T12:00:18 IST" duration-ms="5687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="verifyMaskedPassword()[pri:9, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:18 IST" name="verifyMaskedPassword" finished-at="2022-09-07T12:00:21 IST" duration-ms="2300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMaskedPassword -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:21 IST" name="postCondition" finished-at="2022-09-07T12:00:21 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMaskedPassword status=SUCCESS method=AppTest.verifyMaskedPassword()[pri:9, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:21 IST" name="launchApp" finished-at="2022-09-07T12:00:27 IST" duration-ms="5900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="invalidPassword()[pri:10, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:27 IST" name="invalidPassword" finished-at="2022-09-07T12:00:30 IST" duration-ms="3736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:30 IST" name="postCondition" finished-at="2022-09-07T12:00:30 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=AppTest.invalidPassword()[pri:10, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:30 IST" name="launchApp" finished-at="2022-09-07T12:00:37 IST" duration-ms="6946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="validateErrorCaseSensitivityPwd()[pri:11, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:37 IST" name="validateErrorCaseSensitivityPwd" finished-at="2022-09-07T12:00:41 IST" duration-ms="3665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateErrorCaseSensitivityPwd -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:41 IST" name="postCondition" finished-at="2022-09-07T12:00:41 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateErrorCaseSensitivityPwd status=SUCCESS method=AppTest.validateErrorCaseSensitivityPwd()[pri:11, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:41 IST" name="launchApp" finished-at="2022-09-07T12:00:44 IST" duration-ms="2921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="forgotPassword()[pri:12, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:44 IST" name="forgotPassword" finished-at="2022-09-07T12:00:47 IST" duration-ms="3235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPassword -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:47 IST" name="postCondition" finished-at="2022-09-07T12:00:47 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPassword status=SUCCESS method=AppTest.forgotPassword()[pri:12, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:47 IST" name="launchApp" finished-at="2022-09-07T12:00:54 IST" duration-ms="6344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="verifyEmailAddress()[pri:13, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:54 IST" name="verifyEmailAddress" finished-at="2022-09-07T12:00:56 IST" duration-ms="2253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailAddress -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:56 IST" name="postCondition" finished-at="2022-09-07T12:00:56 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailAddress status=SUCCESS method=AppTest.verifyEmailAddress()[pri:13, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:00:56 IST" name="launchApp" finished-at="2022-09-07T12:01:01 IST" duration-ms="4555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="validEmailResetPassword()[pri:14, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:01 IST" name="validEmailResetPassword" finished-at="2022-09-07T12:01:15 IST" duration-ms="14315" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='Toastify__toast-body toast-body']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.2F1QV3}, goog:chromeOptions: {debuggerAddress: localhost:33143}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 042afb22c5a65ba6383151c60e01c847
*** Element info: {Using=xpath, value=//div[@class='Toastify__toast-body toast-body']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='Toastify__toast-body toast-body']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.2F1QV3}, goog:chromeOptions: {debuggerAddress: localhost:33143}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 042afb22c5a65ba6383151c60e01c847
*** Element info: {Using=xpath, value=//div[@class='Toastify__toast-body toast-body']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.nglc.screen.ForgotPassword.verifyNotificationMsgAfterClickOnSendResetBtn(ForgotPassword.java:54)
at com.nglc.application.AppTest.validEmailResetPassword(AppTest.java:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailResetPassword -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:15 IST" name="postCondition" finished-at="2022-09-07T12:01:15 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validEmailResetPassword status=FAILURE method=AppTest.validEmailResetPassword()[pri:14, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:15 IST" name="launchApp" finished-at="2022-09-07T12:01:18 IST" duration-ms="2786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="overviewScreen()[pri:100, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:18 IST" name="overviewScreen" finished-at="2022-09-07T12:01:22 IST" duration-ms="4287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- overviewScreen -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:22 IST" name="postCondition" finished-at="2022-09-07T12:01:22 IST" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=overviewScreen status=SUCCESS method=AppTest.overviewScreen()[pri:100, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:22 IST" name="launchApp" finished-at="2022-09-07T12:01:26 IST" duration-ms="4040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="organisationsLink()[pri:101, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:26 IST" name="organisationsLink" finished-at="2022-09-07T12:01:31 IST" duration-ms="4333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- organisationsLink -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:31 IST" name="postCondition" finished-at="2022-09-07T12:01:31 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=organisationsLink status=SUCCESS method=AppTest.organisationsLink()[pri:101, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:31 IST" name="launchApp" finished-at="2022-09-07T12:01:34 IST" duration-ms="3096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="bibliothecaUserLink()[pri:102, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:34 IST" name="bibliothecaUserLink" finished-at="2022-09-07T12:01:39 IST" duration-ms="5336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bibliothecaUserLink -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:39 IST" name="postCondition" finished-at="2022-09-07T12:01:39 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bibliothecaUserLink status=SUCCESS method=AppTest.bibliothecaUserLink()[pri:102, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:39 IST" name="launchApp" finished-at="2022-09-07T12:01:42 IST" duration-ms="3062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="notification()[pri:103, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:42 IST" name="notification" finished-at="2022-09-07T12:01:47 IST" duration-ms="4315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notification -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:47 IST" name="postCondition" finished-at="2022-09-07T12:01:47 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=notification status=SUCCESS method=AppTest.notification()[pri:103, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:47 IST" name="launchApp" finished-at="2022-09-07T12:01:51 IST" duration-ms="4188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="profileIcon()[pri:104, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:51 IST" name="profileIcon" finished-at="2022-09-07T12:01:55 IST" duration-ms="4314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- profileIcon -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:55 IST" name="postCondition" finished-at="2022-09-07T12:01:55 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=profileIcon status=SUCCESS method=AppTest.profileIcon()[pri:104, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:01:55 IST" name="launchApp" finished-at="2022-09-07T12:02:00 IST" duration-ms="5008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="logout()[pri:105, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:00 IST" name="logout" finished-at="2022-09-07T12:02:18 IST" duration-ms="17737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:18 IST" name="postCondition" finished-at="2022-09-07T12:02:18 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logout status=SUCCESS method=AppTest.logout()[pri:105, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:18 IST" name="launchApp" finished-at="2022-09-07T12:02:21 IST" duration-ms="3330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="redirectAddOrganisationScreen()[pri:106, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:21 IST" name="redirectAddOrganisationScreen" finished-at="2022-09-07T12:02:26 IST" duration-ms="4449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectAddOrganisationScreen -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:26 IST" name="postCondition" finished-at="2022-09-07T12:02:26 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectAddOrganisationScreen status=SUCCESS method=AppTest.redirectAddOrganisationScreen()[pri:106, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:26 IST" name="launchApp" finished-at="2022-09-07T12:02:29 IST" duration-ms="3184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="redirectOrganisationDetailScreen()[pri:107, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:29 IST" name="redirectOrganisationDetailScreen" finished-at="2022-09-07T12:02:35 IST" duration-ms="5650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectOrganisationDetailScreen -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:35 IST" name="postCondition" finished-at="2022-09-07T12:02:35 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectOrganisationDetailScreen status=SUCCESS method=AppTest.redirectOrganisationDetailScreen()[pri:107, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:35 IST" name="launchApp" finished-at="2022-09-07T12:02:39 IST" duration-ms="3887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="countryDropdownVisible()[pri:109, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:39 IST" name="countryDropdownVisible" finished-at="2022-09-07T12:02:42 IST" duration-ms="3634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countryDropdownVisible -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:42 IST" name="postCondition" finished-at="2022-09-07T12:02:42 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=countryDropdownVisible status=SUCCESS method=AppTest.countryDropdownVisible()[pri:109, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:42 IST" name="launchApp" finished-at="2022-09-07T12:02:46 IST" duration-ms="3115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="searchIconClickable()[pri:112, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:46 IST" name="searchIconClickable" finished-at="2022-09-07T12:02:49 IST" duration-ms="3931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchIconClickable -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:49 IST" name="postCondition" finished-at="2022-09-07T12:02:50 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchIconClickable status=SUCCESS method=AppTest.searchIconClickable()[pri:112, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:50 IST" name="launchApp" finished-at="2022-09-07T12:02:53 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="searchExistingOrganisation()[pri:113, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:53 IST" name="searchExistingOrganisation" finished-at="2022-09-07T12:02:59 IST" duration-ms="5947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchExistingOrganisation -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:59 IST" name="postCondition" finished-at="2022-09-07T12:02:59 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchExistingOrganisation status=SUCCESS method=AppTest.searchExistingOrganisation()[pri:113, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:02:59 IST" name="launchApp" finished-at="2022-09-07T12:03:02 IST" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="searchNonExistingOrganisation()[pri:114, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:02 IST" name="searchNonExistingOrganisation" finished-at="2022-09-07T12:03:08 IST" duration-ms="5870" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNonExistingOrganisation -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:08 IST" name="postCondition" finished-at="2022-09-07T12:03:08 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchNonExistingOrganisation status=SUCCESS method=AppTest.searchNonExistingOrganisation()[pri:114, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:08 IST" name="launchApp" finished-at="2022-09-07T12:03:12 IST" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="CreateOrganisation()[pri:115, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:12 IST" name="CreateOrganisation" finished-at="2022-09-07T12:03:24 IST" duration-ms="12445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateOrganisation -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:24 IST" name="postCondition" finished-at="2022-09-07T12:03:24 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateOrganisation status=SUCCESS method=AppTest.CreateOrganisation()[pri:115, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:24 IST" name="launchApp" finished-at="2022-09-07T12:03:28 IST" duration-ms="4369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="BlankDataCreateOrganisation()[pri:116, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:28 IST" name="BlankDataCreateOrganisation" finished-at="2022-09-07T12:03:36 IST" duration-ms="7854" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [null] but found [Organisation name is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [null] but found [Organisation name is required]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.nglc.screen.OrganisationAdd.CreateAnOrganisationBlankRequiredData(OrganisationAdd.java:177)
at com.nglc.application.AppTest.BlankDataCreateOrganisation(AppTest.java:421)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BlankDataCreateOrganisation -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:36 IST" name="postCondition" finished-at="2022-09-07T12:03:37 IST" duration-ms="267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BlankDataCreateOrganisation status=FAILURE method=AppTest.BlankDataCreateOrganisation()[pri:116, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:37 IST" name="launchApp" finished-at="2022-09-07T12:03:40 IST" duration-ms="3279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="userlist()[pri:200, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:40 IST" name="userlist" finished-at="2022-09-07T12:03:46 IST" duration-ms="6627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userlist -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:46 IST" name="postCondition" finished-at="2022-09-07T12:03:47 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userlist status=SUCCESS method=AppTest.userlist()[pri:200, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:47 IST" name="launchApp" finished-at="2022-09-07T12:03:50 IST" duration-ms="3588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="ValidUserSearch()[pri:201, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:50 IST" name="ValidUserSearch" finished-at="2022-09-07T12:03:59 IST" duration-ms="8733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidUserSearch -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:59 IST" name="postCondition" finished-at="2022-09-07T12:03:59 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidUserSearch status=SUCCESS method=AppTest.ValidUserSearch()[pri:201, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:03:59 IST" name="launchApp" finished-at="2022-09-07T12:04:02 IST" duration-ms="3470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="InvalidUserSearch()[pri:202, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:02 IST" name="InvalidUserSearch" finished-at="2022-09-07T12:04:11 IST" duration-ms="8774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidUserSearch -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:11 IST" name="postCondition" finished-at="2022-09-07T12:04:11 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidUserSearch status=SUCCESS method=AppTest.InvalidUserSearch()[pri:202, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:11 IST" name="launchApp" finished-at="2022-09-07T12:04:14 IST" duration-ms="2963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="AddUserButton()[pri:203, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:14 IST" name="AddUserButton" finished-at="2022-09-07T12:04:21 IST" duration-ms="6641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddUserButton -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:21 IST" name="postCondition" finished-at="2022-09-07T12:04:21 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddUserButton status=SUCCESS method=AppTest.AddUserButton()[pri:203, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:21 IST" name="launchApp" finished-at="2022-09-07T12:04:24 IST" duration-ms="3527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="UserProfile()[pri:204, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:24 IST" name="UserProfile" finished-at="2022-09-07T12:04:40 IST" duration-ms="15591" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[normalize-space()='Steffen Muldbjerg']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.DtS3qT}, goog:chromeOptions: {debuggerAddress: localhost:45435}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0f1fe91a685439629138b3a22b9d8a19
*** Element info: {Using=xpath, value=//p[normalize-space()='Steffen Muldbjerg']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[normalize-space()='Steffen Muldbjerg']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.DtS3qT}, goog:chromeOptions: {debuggerAddress: localhost:45435}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 0f1fe91a685439629138b3a22b9d8a19
*** Element info: {Using=xpath, value=//p[normalize-space()='Steffen Muldbjerg']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.nglc.core.Library.get_WebElement_Object(Library.java:21)
at com.nglc.core.Library.clickOnAnyElement(Library.java:46)
at com.nglc.screen.UserList.ClickOnActiveUserCard(UserList.java:33)
at com.nglc.application.AppTest.UserProfile(AppTest.java:521)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserProfile -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:40 IST" name="postCondition" finished-at="2022-09-07T12:04:40 IST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserProfile status=FAILURE method=AppTest.UserProfile()[pri:204, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:40 IST" name="launchApp" finished-at="2022-09-07T12:04:49 IST" duration-ms="8409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="UserBreadCrumb()[pri:205, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:49 IST" name="UserBreadCrumb" finished-at="2022-09-07T12:04:57 IST" duration-ms="8718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserBreadCrumb -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:57 IST" name="postCondition" finished-at="2022-09-07T12:04:57 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserBreadCrumb status=SUCCESS method=AppTest.UserBreadCrumb()[pri:205, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:04:57 IST" name="launchApp" finished-at="2022-09-07T12:05:00 IST" duration-ms="3011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="AddingValidUser()[pri:206, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:00 IST" name="AddingValidUser" finished-at="2022-09-07T12:05:20 IST" duration-ms="19307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddingValidUser -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:20 IST" name="postCondition" finished-at="2022-09-07T12:05:20 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddingValidUser status=SUCCESS method=AppTest.AddingValidUser()[pri:206, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:20 IST" name="launchApp" finished-at="2022-09-07T12:05:25 IST" duration-ms="4939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="AddingUserwithBlankData()[pri:207, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:25 IST" name="AddingUserwithBlankData" finished-at="2022-09-07T12:05:39 IST" duration-ms="13839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddingUserwithBlankData -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:39 IST" name="postCondition" finished-at="2022-09-07T12:05:39 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddingUserwithBlankData status=SUCCESS method=AppTest.AddingUserwithBlankData()[pri:207, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:39 IST" name="launchApp" finished-at="2022-09-07T12:05:44 IST" duration-ms="5517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="EditValidUser()[pri:210, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:05:44 IST" name="EditValidUser" finished-at="2022-09-07T12:06:01 IST" duration-ms="16614" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[normalize-space()='Steffen Muldbjerg']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.zuRB7c}, goog:chromeOptions: {debuggerAddress: localhost:38947}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 703ac29ccbc846c3ad3dbfb97bcb1435
*** Element info: {Using=xpath, value=//p[normalize-space()='Steffen Muldbjerg']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[normalize-space()='Steffen Muldbjerg']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'localhost.localdomain', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.12.10-1.el8.elrepo.x86_64', java.version: '11.0.14'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.zuRB7c}, goog:chromeOptions: {debuggerAddress: localhost:38947}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 703ac29ccbc846c3ad3dbfb97bcb1435
*** Element info: {Using=xpath, value=//p[normalize-space()='Steffen Muldbjerg']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.nglc.core.Library.get_WebElement_Object(Library.java:21)
at com.nglc.core.Library.clickOnAnyElement(Library.java:46)
at com.nglc.screen.UserList.ClickOnActiveUserCard(UserList.java:33)
at com.nglc.application.AppTest.EditValidUser(AppTest.java:606)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditValidUser -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:06:01 IST" name="postCondition" finished-at="2022-09-07T12:06:01 IST" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditValidUser status=FAILURE method=AppTest.EditValidUser()[pri:210, instance:com.nglc.application.AppTest@453da22c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:com.nglc.application.AppTest@453da22c]" started-at="2022-09-07T12:06:01 IST" name="afterclass" finished-at="2022-09-07T12:06:01 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- com.nglc.application.AppTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
